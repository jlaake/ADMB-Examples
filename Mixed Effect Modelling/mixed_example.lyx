#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble

\usepackage{amsthm}\usepackage{epsfig}\usepackage{psfrag}\usepackage{lineno}

\bibliographystyle{apalike}

%\setlength{\evensidemargin}{0in} \setlength{\oddsidemargin}{0in}
%\setlength{\topmargin}{0.0in} \setlength{\textwidth}{6.5in}
%\setlength{\textheight}{9in} \setlength{\topskip}{0in}
%\setlength{\headheight}{0in} \setlength{\headsep}{0in}
\usepackage{pdflscape}
\end_preamble
\use_default_options false
\begin_modules
sweave
\end_modules
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 2
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Building General Random Effect Models with R and ADMB
\end_layout

\begin_layout Author
Jeff Laake, Hans Skaug and Devin Johnson
\end_layout

\begin_layout Standard
The 
\family typewriter
\series bold
\size small
ADMB
\family default
\series default
\size default
 and Otter Research web sites provide examples of specific random effect
 models.
 See 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://admb-project.org/examples
\end_layout

\end_inset

 and 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.admb-project.org/examples/miscellaneous/otter-reseach-collection
\end_layout

\end_inset

.
 However, none of these examples discuss how to build more general 
\family typewriter
\series bold
\size small
TPL
\family default
\series default
\size default
 files to accommodate a class of random effect models.
 The 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 package 
\family typewriter
\series bold
\size small
glmmadmb
\family default
\series default
\size default
 (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://glmmadmb.r-forge.r-project.org/
\end_layout

\end_inset

) is an example where 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 is used with a single 
\family typewriter
\series bold
\size small
TPL
\family default
\series default
\size default
 file that can fit generalized linear mixed models for a wide range of distribut
ions.
 By examining the 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 code and 
\family typewriter
\series bold
\size small
TPL
\family default
\series default
\size default
 file for 
\family typewriter
\series bold
\size small
glmmadmb
\family default
\series default
\size default
, you can work out how to develop a general 
\family typewriter
\series bold
\size small
TPL
\family default
\series default
\size default
 file and use 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 code to build the structures 
\family typewriter
\series bold
\size small
ADMB
\family default
\series default
\size default
 needs to fit mixed effect models.
 However, 
\family typewriter
\series bold
\size small
glmmadmb
\family default
\series default
\size default
 is fairly complex and sorting through the code can be challenging.
 Here we provide a simpler example with comments to demonstrate the process
 so others can incorporate this into their model building software.
\end_layout

\begin_layout Standard
We use the general modeling tools in 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 to create a 
\family typewriter
\series bold
\size small
DAT
\family default
\series default
\size default
 file that contains the structures needed for the TPL file for 
\family typewriter
\series bold
\size small
ADMB
\family default
\series default
\size default
.
 We use the 
\family typewriter
\series bold
\size small
R2admb
\family default
\series default
\size default
 package as the 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 and 
\family typewriter
\series bold
\size small
ADMB
\family default
\series default
\size default
 interface.
 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 and 
\family typewriter
\series bold
\size small
R2admb
\family default
\series default
\size default
 could be replaced with equivalent software that builds the 
\family typewriter
\series bold
\size small
DAT
\family default
\series default
\size default
 file but 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 is freely available and has a wealth of modeling and data manipulation
 tools.
 Using mixed logistic regression as an example, we'll begin by describing
 the
\family typewriter
\series bold
\size small
 TPL
\family default
\series default
\size default
 file structure to fit a random effects model for a user-specified dataframe
 and formula.
\end_layout

\begin_layout Section*
ADMB Code
\end_layout

\begin_layout Standard
We will describe the contents of the file 
\family typewriter
\series bold
\size small
mixed.tpl
\family default
\series default
\size default
 given in the Appendix.
 This simple skeleton file could be modified to compute a different likelihood
 or could be extended to incorporate mixed-effects modeling for several
 parameters contained in a single likelihood.
 The 
\family typewriter
\series bold
\size small
TPL
\family default
\series default
\size default
 file is generalized to work with any data file or formula by specifying
 the model via design matrices that are passed as data.
 For mixed effect models, there is a design matrix for the fixed effect
 and one for the random effects.
 In addition, there is a vector of indices for the random effects that are
 passed as data as well.
\end_layout

\begin_layout Standard
We'll describe the 
\family typewriter
\series bold
\size small
DAT
\family default
\series default
\size default
 structure with a simple illustrative example that is too small to use in
 practice.
 The variable 
\family typewriter
\series bold
\size small
y
\family default
\series default
\size default
 is the response and 
\family typewriter
\series bold
\size small
id
\family default
\series default
\size default
, 
\family typewriter
\series bold
\size small
sex
\family default
\series default
\size default
 and 
\family typewriter
\series bold
\size small
time
\family default
\series default
\size default
 are all factor variables.
\begin_inset VSpace 0.25in
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
id
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 0.25in
\end_inset


\end_layout

\begin_layout Standard
\noindent
Consider building a logistic regression model for the response 
\family typewriter
\series bold
\size small
y
\family default
\series default
\size default
 in which 
\family typewriter
\series bold
\size small
sex
\family default
\series default
\size default
 is a fixed effect and 
\family typewriter
\series bold
\size small
id
\family default
\series default
\size default
 (individual heterogeneity) is a random intercept for the response.
 We begin by describing the 
\family typewriter
\series bold
\size small
DATA_SECTION
\family default
\series default
\size default
 of the 
\family typewriter
\series bold
\size small
TPL
\family default
\series default
\size default
 file and show the contents below of the 
\family typewriter
\series bold
\size small
DAT
\family default
\series default
\size default
 file for this example.
 The variables in parentheses are the names used in the 
\family typewriter
\series bold
\size small
TPL
\family default
\series default
\size default
 file (Appendix) and we have used underscore to show the range of the vector
 or matrix (e.g.
 y_i, i=1 to n):
\begin_inset VSpace 0.25in
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
# number of rows in data (n)
\end_layout

\begin_layout Plain Layout
6
\end_layout

\begin_layout Plain Layout
# vector of 6 responses (y_i, i=1 to n)
\end_layout

\begin_layout Plain Layout
0 1 0 1 1 0
\end_layout

\begin_layout Plain Layout
# number of columns in the fixed effect design matrix (kfixed)
\end_layout

\begin_layout Plain Layout
2
\end_layout

\begin_layout Plain Layout
# fixed effect design matrix (fixedDM_ij; i=1 to n; j=1 to kfixed) (first
 column is intercept; second column is male effect)
\end_layout

\begin_layout Plain Layout
1 0
\end_layout

\begin_layout Plain Layout
1 0
\end_layout

\begin_layout Plain Layout
1 1
\end_layout

\begin_layout Plain Layout
1 1
\end_layout

\begin_layout Plain Layout
1 0 
\end_layout

\begin_layout Plain Layout
1 0
\end_layout

\begin_layout Plain Layout
# number of random effect values (nre) (for this model, one for each id)
\end_layout

\begin_layout Plain Layout
3
\end_layout

\begin_layout Plain Layout
# number of columns in the random effect design matrix (krand)
\end_layout

\begin_layout Plain Layout
1
\end_layout

\begin_layout Plain Layout
# random effect design matrix (randDM_ij; i=1 to n; j=1 to krand)
\end_layout

\begin_layout Plain Layout
1
\end_layout

\begin_layout Plain Layout
1
\end_layout

\begin_layout Plain Layout
1
\end_layout

\begin_layout Plain Layout
1
\end_layout

\begin_layout Plain Layout
1
\end_layout

\begin_layout Plain Layout
1
\end_layout

\begin_layout Plain Layout
# random effect indices (randIndex_ij; i=1 to n; j=1 to krand)(values from
 1 to nre)
\end_layout

\begin_layout Plain Layout
1
\end_layout

\begin_layout Plain Layout
1
\end_layout

\begin_layout Plain Layout
2
\end_layout

\begin_layout Plain Layout
2
\end_layout

\begin_layout Plain Layout
3
\end_layout

\begin_layout Plain Layout
3
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 0.25in
\end_inset


\end_layout

\begin_layout Standard
\noindent
There is a single random effect variable with 
\shape italic
nre
\shape default
=3 values (ie.
 one for each of the 3 individuals).
 The indices specify which random effect is used for the value in the random
 design matrix.
 For this model there are 3 parameters (
\shape italic
kfixed
\shape default
(2) + 
\shape italic
krand
\shape default
(1)): Intercept and Male fixed effects and sigma (standard deviation) for
 id random effect.
 The likelihood is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
L(\beta_{1},\beta_{2},\tau_{1},\boldsymbol{u}|\:\boldsymbol{y}\mathrm{)=\mathit{\prod_{i=1}^{6}p_{i}^{y_{i}}}(1-\mathit{p}_{\mathit{i}})^{(1-\mathit{y}_{i})}}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
Below we specify the value of each 
\begin_inset Formula $p_{i}$
\end_inset

 (as logit) in terms of the parameters and the 3 random effect values 
\begin_inset Formula $u_{1},u_{2},u_{3}$
\end_inset

 which are standard normal random variables.
 The variable 
\shape italic
mu
\shape default
 (
\begin_inset Formula $\mu$
\end_inset

) is the logit of 
\begin_inset Formula $p_{i}$
\end_inset

 and we compute the log of the likelihood which simplifies to 
\begin_inset Formula $\sum_{i=1}^{6}[y_{i}\mu_{i}+\ln(1+\exp(\mu_{i}))]$
\end_inset

.
 
\begin_inset VSpace 0.25in
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{1}$
\end_inset

) =
\begin_inset Formula $\mu_{1}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+u_{1}e^{\tau_{1}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{2}$
\end_inset

) =
\begin_inset Formula $\mu_{2}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+u_{1}e^{\tau_{1}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{3}$
\end_inset

) =
\begin_inset Formula $\mu_{3}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+\beta_{2}+u_{2}e^{\tau_{1}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{4}$
\end_inset

) =
\begin_inset Formula $\mu_{4}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+\beta_{2}+u_{2}e^{\tau_{1}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{5}$
\end_inset

) =
\begin_inset Formula $\mu_{5}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+u_{3}e^{\tau_{1}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{6}$
\end_inset

) =
\begin_inset Formula $\mu_{6}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+u_{3}e^{\tau_{1}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 0.25in
\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
\series bold
\size small
PARAMETER_SECTION
\family default
\series default
\size default
 contains a vector 
\family typewriter
\series bold
\shape italic
\size small
Beta
\family default
\series default
\shape default
\size default
 which are the values of the fixed parameters from 1 to 
\family typewriter
\series bold
\shape italic
\size small
kfixed
\family default
\series default
\shape default
\size default
 that are estimated in phase 1.
 It also contains a vector 
\family typewriter
\series bold
\shape italic
\size small
Tau
\family default
\series default
\shape default
\size default
 which are the random parameters from 1 to 
\family typewriter
\series bold
\shape italic
\size small
krand
\family default
\series default
\shape default
\size default
 and a 
\family typewriter
\series bold
\shape italic
\size small
random_effects_vector
\family default
\series default
\shape default
\size default
 from 1 to 
\family typewriter
\series bold
\shape italic
\size small
nre
\family default
\series default
\shape default
\size default
.
 The random effect parameters and values are estimated in phase 2.
 If there is no random component in the model, then the phase is set to
 -1 so it will be ignored and a fixed effects model is fitted.
 The negative log-likelihood value (
\family typewriter
\series bold
\shape italic
\size small
objective_function_value
\family default
\series default
\shape default
\size default
) is held in 
\family typewriter
\series bold
\shape italic
\size small
g
\family default
\series default
\shape default
\size default
.
 
\end_layout

\begin_layout Standard
The 
\family typewriter
\series bold
\size small
PROCEDURE_SECTION
\family default
\series default
\size default
 of the 
\family typewriter
\series bold
\size small
TPL
\family default
\series default
\size default
 file for computation of the objective function is fairly simple.
 It contains a loop over each of the 
\family typewriter
\series bold
\shape italic
\size small
nre
\family default
\series default
\shape default
\size default
 random effects that calls the 
\family typewriter
\series bold
\size small
SEPARABLE_FUNCTION
\family default
\series default
\size default
 
\family typewriter
\series bold
\shape italic
\size small
n01_prior
\family default
\series default
\shape default
\size default
 which sums the negative log-likelihood of a standard normal distribution.
 That loop is only called if there are any random effects.
 The next loop is over each row in the data and it calls the 
\family typewriter
\series bold
\size small
SEPARABLE_FUNCTION 
\shape italic
ll_i
\shape default
 
\family default
\series default
\size default
to compute and sum the negative log-likelihood contribution for each response.
 In the call to 
\family typewriter
\series bold
\shape italic
\size small
ll_i
\family default
\series default
\shape default
\size default
 you must pass the parameters and the random effects used in the calculation.
 Notice that the code specifies 
\family typewriter
\series bold
\shape italic
\size small
u(randIndex(i))
\family default
\series default
\size default
 
\shape default
which passes only the random effect values needed for the each row in the
 data.
 When used with the 
\family typewriter
\series bold
\shape italic
\size small
-shess
\family default
\series default
\shape default
\size default
 run argument this improves execution speed (Skaug and Fournier 2011).
\end_layout

\begin_layout Standard
The 
\family typewriter
\series bold
\size small
SEPARABLE_FUNCTION
\family default
\series default
\size default
 
\family typewriter
\series bold
\shape italic
\size small
ll_i
\family default
\series default
\shape default
\size default
 computes the value of mu which is 
\family typewriter
\series bold
\shape italic
\size small
fixedDM(i)*Beta
\family default
\series default
\shape default
\size default
 plus 
\family typewriter
\series bold
\shape italic
\size small
randDM(i,j)*u(j)*mfexp(Tau(j))
\family default
\series default
\shape default
\size default
 for each column in the random design matrix (
\family typewriter
\series bold
\shape italic
\size small
krand
\family default
\series default
\shape default
\size default
).
 For our simple example,
\family typewriter
\series bold
\size small
 
\shape italic
krand
\family default
\series default
\shape default
\size default
=1 and
\family typewriter
\series bold
\size small
 
\shape italic
randDM(i,j)
\family default
\series default
\shape default
\size default
=1, so the code simplifies to the calculations shown above.
 
\end_layout

\begin_layout Standard
Now let's expand on the example with a model that has both an individual
 and temporal random intercept.
 The 
\family typewriter
\series bold
\size small
TPL
\family default
\series default
\size default
 file is the same and only the 
\family typewriter
\series bold
\size small
DAT
\family default
\series default
\size default
 file changes.
 Now we have 
\family typewriter
\series bold
\shape italic
\size small
nre
\family default
\series default
\shape default
\size default
=5 random values (3 for 
\family typewriter
\series bold
\shape italic
\size small
id
\family default
\series default
\shape default
\size default
 and 2 for 
\family typewriter
\series bold
\shape italic
\size small
time
\family default
\series default
\shape default
\size default
) and we have 
\family typewriter
\series bold
\shape italic
\size small
krand
\family default
\series default
\shape default
\size default
=2 columns in the random design matrix, one for the intercept of each random
 effect.
\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 0.25in
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
# number of rows in data (n)
\end_layout

\begin_layout Plain Layout
6
\end_layout

\begin_layout Plain Layout
# vector of 6 responses (y_i, i=1 to n)
\end_layout

\begin_layout Plain Layout
0 1 0 1 1 0
\end_layout

\begin_layout Plain Layout
# number of columns in the fixed effect design matrix (kfixed)
\end_layout

\begin_layout Plain Layout
2
\end_layout

\begin_layout Plain Layout
# fixed effect design matrix (fixedDM_ij; i=1 to n; j=1 to kfixed) (first
 column is intercept; second column is male effect)
\end_layout

\begin_layout Plain Layout
1 0
\end_layout

\begin_layout Plain Layout
1 0
\end_layout

\begin_layout Plain Layout
1 1
\end_layout

\begin_layout Plain Layout
1 1
\end_layout

\begin_layout Plain Layout
1 0 
\end_layout

\begin_layout Plain Layout
1 0
\end_layout

\begin_layout Plain Layout
# number of random effect values (nre) (for this model, one for each id)
\end_layout

\begin_layout Plain Layout
5
\end_layout

\begin_layout Plain Layout
# number of columns in the random effect design matrix (krand)
\end_layout

\begin_layout Plain Layout
2
\end_layout

\begin_layout Plain Layout
# random effect design matrix (randDM_ij; i=1 to n; j=1 to krand)
\end_layout

\begin_layout Plain Layout
1 1
\end_layout

\begin_layout Plain Layout
1 1
\end_layout

\begin_layout Plain Layout
1 1
\end_layout

\begin_layout Plain Layout
1 1
\end_layout

\begin_layout Plain Layout
1 1
\end_layout

\begin_layout Plain Layout
1 1
\end_layout

\begin_layout Plain Layout
# random effect indices (randIndex_ij; i=1 to n; j=1 to krand)(values from
 1 to nre)
\end_layout

\begin_layout Plain Layout
1 4
\end_layout

\begin_layout Plain Layout
1 5
\end_layout

\begin_layout Plain Layout
2 4
\end_layout

\begin_layout Plain Layout
2 5
\end_layout

\begin_layout Plain Layout
3 4
\end_layout

\begin_layout Plain Layout
3 5
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 0.25in
\end_inset


\end_layout

\begin_layout Standard
The important design aspect is the use of a single random effect vector
 to contain the values for each type of random effect (e.g.
 
\family typewriter
\series bold
\shape italic
\size small
id
\family default
\series default
\shape default
\size default
 and 
\family typewriter
\series bold
\shape italic
\size small
time
\family default
\series default
\shape default
\size default
).
 This is important because random effects must be passed as arguments to
 the 
\family typewriter
\series bold
\size small
SEPARABLE_FUNCTION
\family default
\series default
\size default
.
 Had we decided to use a different vector for each type of random effect,
 we would have to change the definition of the 
\family typewriter
\series bold
\size small
SEPARABLE_FUNCTION
\family default
\series default
\size default
 and its call in the 
\family typewriter
\series bold
\size small
PROCEDURE_SECTION
\family default
\series default
\size default
.
 Modification of the code is avoided by using a single vector and using
 indices to specify which to use with the random design matrix values.
 For this model there are 4 parameters (
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\beta_{1}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
,
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\beta_{2}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
,
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\tau_{1}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
,
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\tau_{2}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
) and the values of 
\family typewriter
\series bold
\shape italic
\size small
mu
\family default
\series default
\shape default
\size default
 are:
\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 0.25in
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{1}$
\end_inset

) =
\begin_inset Formula $\mu_{1}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+u_{1}e^{\tau_{1}}+u_{4}e^{\tau_{2}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{2}$
\end_inset

) =
\begin_inset Formula $\mu_{2}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+u_{1}e^{\tau_{1}}+u_{5}e^{\tau_{2}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{3}$
\end_inset

) =
\begin_inset Formula $\mu_{3}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+\beta_{2}+u_{2}e^{\tau_{1}}+u_{4}e^{\tau_{2}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{4}$
\end_inset

) =
\begin_inset Formula $\mu_{4}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+\beta_{2}+u_{2}e^{\tau_{1}}+u_{5}e^{\tau_{2}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{5}$
\end_inset

) =
\begin_inset Formula $\mu_{5}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+u_{3}e^{\tau_{1}}+u_{4}e^{\tau_{2}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logit(
\begin_inset Formula $p_{6}$
\end_inset

) =
\begin_inset Formula $\mu_{6}$
\end_inset

=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta_{1}+u_{3}e^{\tau_{1}}+u_{5}e^{\tau_{2}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 0.25in
\end_inset


\end_layout

\begin_layout Section*
R Code
\end_layout

\begin_layout Standard
Now you certainly would not want to construct the 
\family typewriter
\series bold
\size small
DAT
\family default
\series default
\size default
 file by hand for anything other than a simple illustrative example like
 this one.
 It would be tedious and error prone.
 This is where 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 and the 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 package 
\family typewriter
\series bold
\size small
R2admb
\family default
\series default
\size default
 become an invaluable tool.
 We have used functions in 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 listed in the Appendix: 1) 
\family typewriter
\series bold
\size small
proc.form
\family default
\series default
\size default
 - parses a formula using the structure specified in the 
\family typewriter
\series bold
\size small
R
\family default
\series default
\size default
 package 
\family typewriter
\series bold
\size small
lme4
\family default
\series default
\size default
, 2) 
\family typewriter
\series bold
\size small
mixed.model.admb
\family default
\series default
\size default
 - calls 
\family typewriter
\series bold
\size small
proc.form
\family default
\series default
\size default
 with a formula and then with a data frame constructs the design matrices
 and indices needed for the 
\family typewriter
\series bold
\size small
DAT
\family default
\series default
\size default
 file, and 3) 
\family typewriter
\series bold
\size small
mixed.model.dat
\family default
\series default
\size default
 - writes the model components structures to the 
\family typewriter
\series bold
\size small
DAT
\family default
\series default
\size default
 file.
 The function 
\family typewriter
\series bold
\shape italic
\size small
mixed.model.dat
\family default
\series default
\shape default
\size default
 only writes out a mixed effect model structure and not the complete 
\family typewriter
\series bold
\size small
DAT 
\family default
\series default
\size default
file.
 We chose to do this because it may be included as part of a 
\family typewriter
\series bold
\size small
DAT
\family default
\series default
\size default
 file that may have other components.
 
\end_layout

\begin_layout Standard
Below are code that construct a simulated data set, fit a mixed-effects
 logistic model with 
\family typewriter
\series bold
\size small
ADMB
\family default
\series default
\size default
 using the code described and then fit the same model with the function
 
\family typewriter
\series bold
\shape italic
\size small
lmer
\family default
\series default
\shape default
\size default
 in the package 
\family typewriter
\series bold
\size small
lme4
\family default
\series default
\size default
 to demonstrate that the same results are obtained.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

<<echo=F>>=
\end_layout

\begin_layout Plain Layout

#' Mixed effect model formula parser
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' Parses a mixed effect model in the lme4 structure of  ~fixed +(re1|g1)
 +...+(ren|gn)
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' @param f formula for mixed effect mode in the form used in lme4; ~fixed
 +(re1|g1) +...+(ren|gn)
\end_layout

\begin_layout Plain Layout

#' @return A list with elements fix.model and re.model.
 fix.model contains the formula for the fixed effects;
\end_layout

\begin_layout Plain Layout

#' re.model contains elements sub, the grouping formula and model the design
 formula for the
\end_layout

\begin_layout Plain Layout

#' random effect.
 Each formula is of type character and must be wrapped with as.formula in
 use with model.matrix
\end_layout

\begin_layout Plain Layout

#' @author Devin Johnson <devin.johnson@@noaa.gov>
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

proc.form <- function(f){
\end_layout

\begin_layout Plain Layout

	tms <- terms(f)
\end_layout

\begin_layout Plain Layout

	tms.lab <- attr(tms, "term.labels")
\end_layout

\begin_layout Plain Layout

	tms.lst <- strsplit(tms.lab, rep(" | ",length(tms.lab)), fixed=TRUE)
\end_layout

\begin_layout Plain Layout

	fix.var <- attr(tms, "term.labels")[sapply(tms.lst, "length")==1]
\end_layout

\begin_layout Plain Layout

	if(length(fix.var)==0) 
\end_layout

\begin_layout Plain Layout

		fix.model="~1"
\end_layout

\begin_layout Plain Layout

	else
\end_layout

\begin_layout Plain Layout

		fix.model <- paste("~ ",paste(fix.var, collapse=" + "))
\end_layout

\begin_layout Plain Layout

	re.lst <- tms.lst[sapply(tms.lst, "length")==2]
\end_layout

\begin_layout Plain Layout

	if(length(re.lst)==0) re.model <- NULL
\end_layout

\begin_layout Plain Layout

	else{
\end_layout

\begin_layout Plain Layout

		re.model <- lapply(re.lst, function(x){list(model=paste("~",x[1]), sub=paste("~"
,x[2],"-1", collapse=""))})
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	return(list(fix.model=fix.model, re.model=re.model))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

#' Mixed effect model contstruction
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' Functions that develop structures needed for a mixed effect model
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' mixed.model.admb - creates design matrices and supporting index matrices
\end_layout

\begin_layout Plain Layout

#' for use of mixed model in ADMB
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' mixed.model.dat - writes to data file (con) for fixed and random effect
 stuctures
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' @usage mixed.model.admb(f,data)
\end_layout

\begin_layout Plain Layout

#'           mixed.model.dat(x,con)
\end_layout

\begin_layout Plain Layout

#' @param f formula for mixed effect mode in the form used in lme4; ~fixed
 +(re1|g1) +...+(ren|gn)
\end_layout

\begin_layout Plain Layout

#' @param data dataframe used to construct the design matrices from the
 formula
\end_layout

\begin_layout Plain Layout

#' @param x list structure created by mixed.model.admb
\end_layout

\begin_layout Plain Layout

#' @param con connection to data file which contents will be appended
\end_layout

\begin_layout Plain Layout

#' @return mixed.model.admb returns a list with elements fixed.dm, the design
 matrix for
\end_layout

\begin_layout Plain Layout

#' the fixed effects; re.dm, a combined design matrix for all of the random
 effects; and 
\end_layout

\begin_layout Plain Layout

#' re.indices, matrix of indices into a single vector of random effects to
 be applied to the 
\end_layout

\begin_layout Plain Layout

#' design matrix location.
\end_layout

\begin_layout Plain Layout

#' @author Jeff Laake 
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

mixed.model.admb=function(formula,data)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

# parse formula for fixed and random effects
\end_layout

\begin_layout Plain Layout

  mlist=proc.form(formula)
\end_layout

\begin_layout Plain Layout

# construct design matrix for fixed effects
\end_layout

\begin_layout Plain Layout

  fixed.dm=model.matrix(as.formula(mlist$fix.model),data)
\end_layout

\begin_layout Plain Layout

# remainder of code is for random effects unless NULL
\end_layout

\begin_layout Plain Layout

  reindex=0
\end_layout

\begin_layout Plain Layout

  re.dm=NULL
\end_layout

\begin_layout Plain Layout

  re.indices=NULL
\end_layout

\begin_layout Plain Layout

  if(!is.null(mlist$re.model))
\end_layout

\begin_layout Plain Layout

  {
\end_layout

\begin_layout Plain Layout

#    Loop over each random effect component
\end_layout

\begin_layout Plain Layout

     for(i in 1:length(mlist$re.model))
\end_layout

\begin_layout Plain Layout

	 {
\end_layout

\begin_layout Plain Layout

#      Make sure each variable used to define random effect group is a factor
 variable
\end_layout

\begin_layout Plain Layout

  	   if(!all(sapply(model.frame(as.formula(mlist$re.model[[i]]$sub),data),is.factor
)))
\end_layout

\begin_layout Plain Layout

	       stop(paste("
\backslash
n one or more variables in",mlist$re.model[[i]]$sub,"is not a factor variable
\backslash
n"))
\end_layout

\begin_layout Plain Layout

       else
\end_layout

\begin_layout Plain Layout

	   {
\end_layout

\begin_layout Plain Layout

#         Compute design matrix for grouping variables
\end_layout

\begin_layout Plain Layout

          zz=model.matrix(as.formula(mlist$re.model[[i]]$sub),data)
\end_layout

\begin_layout Plain Layout

#         Not all combinations of factor variable(s) may be used so only
 use those observed in the data
\end_layout

\begin_layout Plain Layout

		  used.columns=which(colSums(zz)>0)
\end_layout

\begin_layout Plain Layout

		  nre=length(used.columns)
\end_layout

\begin_layout Plain Layout

#         Compute the indices for this particular grouping structure and
 reindex if any missing
\end_layout

\begin_layout Plain Layout

          indices=rowSums(zz*col(zz))
\end_layout

\begin_layout Plain Layout

		  if(nre!=ncol(zz))indices=match(indices,used.columns)
\end_layout

\begin_layout Plain Layout

#         Compute the design matrix for the random effect formula
\end_layout

\begin_layout Plain Layout

          zz=model.matrix(as.formula(mlist$re.model[[i]]$model),data)
\end_layout

\begin_layout Plain Layout

#         Now shift indices to refer to a single vector of random effects
 across all re groupings
\end_layout

\begin_layout Plain Layout

		  ng=max(indices)
\end_layout

\begin_layout Plain Layout

          indices=matrix(indices,nrow=length(indices),ncol=ncol(zz))+reindex
\end_layout

\begin_layout Plain Layout

          indices=t(t(indices)+cumsum(c(0,rep(ng,ncol(zz)-1))))
\end_layout

\begin_layout Plain Layout

          reindex=max(indices)	
\end_layout

\begin_layout Plain Layout

#         Bind random effect design matrices (re.dm), indices into random
 effects vector (re.indices) and
\end_layout

\begin_layout Plain Layout

#         index for the random effect sigma parameter (re.sigma)
\end_layout

\begin_layout Plain Layout

		  re.dm=cbind(re.dm,zz)
\end_layout

\begin_layout Plain Layout

		  re.indices=cbind(re.indices,indices)
\end_layout

\begin_layout Plain Layout

	   }
\end_layout

\begin_layout Plain Layout

	 }
\end_layout

\begin_layout Plain Layout

   }
\end_layout

\begin_layout Plain Layout

   return(list(fixed.dm=fixed.dm,re.dm=re.dm,re.indices=re.indices))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

mixed.model.dat=function(x,con)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	# number of columns of fixed dm
\end_layout

\begin_layout Plain Layout

	write(ncol(x$fixed.dm),con,append=TRUE)
\end_layout

\begin_layout Plain Layout

	# fixed dm
\end_layout

\begin_layout Plain Layout

	write(t(x$fixed.dm),con,ncolumns=ncol(x$fixed.dm),append=TRUE)
\end_layout

\begin_layout Plain Layout

    if(!is.null(x$re.dm))
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		# number of random effects
\end_layout

\begin_layout Plain Layout

		write(max(x$re.indices),con,append=TRUE)
\end_layout

\begin_layout Plain Layout

		# number of columns of re dm
\end_layout

\begin_layout Plain Layout

		write(ncol(x$re.dm),con,append=TRUE)
\end_layout

\begin_layout Plain Layout

		# re dm
\end_layout

\begin_layout Plain Layout

		write(t(x$re.dm),con,ncolumns=ncol(x$re.dm),append=TRUE)
\end_layout

\begin_layout Plain Layout

		# re indices
\end_layout

\begin_layout Plain Layout

		write(t(x$re.indices),con,ncolumns=ncol(x$re.indices),append=TRUE)
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	else
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		# 0 no re
\end_layout

\begin_layout Plain Layout

		write(0,con,append=TRUE)
\end_layout

\begin_layout Plain Layout

		# number of re =0
\end_layout

\begin_layout Plain Layout

		write(0,con,append=TRUE)
\end_layout

\begin_layout Plain Layout

		# number of columns of re dm=0
\end_layout

\begin_layout Plain Layout

		write(0,con,append=TRUE)
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

    invisible()	
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

set.seed(123)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

# Load R2admb package from the library
\end_layout

\begin_layout Plain Layout

library(R2admb)
\end_layout

\begin_layout Plain Layout

# Set environment variables PATH and ADMB_HOME to enable ADMB connection
 
\end_layout

\begin_layout Plain Layout

Sys.setenv(PATH = paste("c:/admb/bin;c:admb/utilities;c:/MinGW/bin;",
\end_layout

\begin_layout Plain Layout

               Sys.getenv("PATH"), sep = ";"))
\end_layout

\begin_layout Plain Layout

Sys.setenv(ADMB_HOME = "c:/admb")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# create simulated data with 2 factor variables f and g with 
\end_layout

\begin_layout Plain Layout

# N(0,.3) and N(0,1) random effects
\end_layout

\begin_layout Plain Layout

fn=rnorm(10,0,.3)
\end_layout

\begin_layout Plain Layout

gn=rnorm(20,0,1)
\end_layout

\begin_layout Plain Layout

data=cbind(data.frame(y=rbinom(400,1,
\end_layout

\begin_layout Plain Layout

      p=plogis(log(.3/.7)+rowSums(expand.grid(fn,gn))))),
\end_layout

\begin_layout Plain Layout

      rbind(expand.grid(f=factor(1:10),g=factor(1:20)),
\end_layout

\begin_layout Plain Layout

      expand.grid(f=factor(1:10),g=factor(1:20))))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Use R2admb functions to compile the ADMB TPL file
\end_layout

\begin_layout Plain Layout

compile_admb("mixed",re=TRUE)
\end_layout

\begin_layout Plain Layout

# Remove any leftover files
\end_layout

\begin_layout Plain Layout

clean_admb("mixed")
\end_layout

\begin_layout Plain Layout

# Create a connection to a file mixed.dat (DAT file)
\end_layout

\begin_layout Plain Layout

con=file("mixed.dat",open="wt")
\end_layout

\begin_layout Plain Layout

# Write out n and responses y to DAT file
\end_layout

\begin_layout Plain Layout

write(nrow(data),con,append=FALSE)
\end_layout

\begin_layout Plain Layout

write(data$y,con,append=TRUE)
\end_layout

\begin_layout Plain Layout

clean_admb("mixed")
\end_layout

\begin_layout Plain Layout

con=file("mixed.dat",open="wt")
\end_layout

\begin_layout Plain Layout

write(nrow(data),con,append=FALSE)
\end_layout

\begin_layout Plain Layout

write(data$y,con,append=TRUE)
\end_layout

\begin_layout Plain Layout

# Write mixed model structures to DAT file 
\end_layout

\begin_layout Plain Layout

mixed.model.dat(mixed.model.admb(~1 +(1|f) +(1|g),data),con)
\end_layout

\begin_layout Plain Layout

# Close connection
\end_layout

\begin_layout Plain Layout

close(con)  
\end_layout

\begin_layout Plain Layout

# Run program
\end_layout

\begin_layout Plain Layout

run_admb("mixed",extra.args="-shess") 
\end_layout

\begin_layout Plain Layout

# Read results into R object
\end_layout

\begin_layout Plain Layout

results=read_admb("mixed") 
\end_layout

\begin_layout Plain Layout

results
\end_layout

\begin_layout Plain Layout

# The value of exp(Tau)^2 should match the variances from lmer
\end_layout

\begin_layout Plain Layout

exp(results$coeflist$Tau*2)
\end_layout

\begin_layout Plain Layout

# Compare to lmer from lme4
\end_layout

\begin_layout Plain Layout

library(lme4)
\end_layout

\begin_layout Plain Layout

lme4res=lmer(y~1 +(1|f) +(1|g),data,family="binomial",REML=FALSE)
\end_layout

\begin_layout Plain Layout

lme4res
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

Skaug, H.
 and D.
 Fournier.
 2011.
 Random effects in AD Model Builder: ADMB-RE User Guide.
 Version 10.0.
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://admb-project.googlecode.com/files/admbre-10.0-rev1.pdf
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Appendix - mixed.tpl
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{% general command to set parameter(s)
\end_layout

\begin_layout Plain Layout

basicstyle=
\backslash
tiny, % print whole listing small
\end_layout

\begin_layout Plain Layout

keywordstyle=
\backslash
color{black}
\backslash
bfseries
\backslash
underbar,
\end_layout

\begin_layout Plain Layout

% underlined bold black keywords
\end_layout

\begin_layout Plain Layout

identifierstyle=, % nothing happens
\end_layout

\begin_layout Plain Layout

commentstyle=
\backslash
color{white}, % white comments
\end_layout

\begin_layout Plain Layout

stringstyle=
\backslash
ttfamily, % typewriter type for strings
\end_layout

\begin_layout Plain Layout

showstringspaces=false}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

// Skeleton template for a mixed effects model structure; with logistic
 regression likelihood
\end_layout

\begin_layout Plain Layout

// Jeff Laake; 22 Jan 2013
\end_layout

\begin_layout Plain Layout

DATA_SECTION 
\end_layout

\begin_layout Plain Layout

    init_int n;                           // number of rows in data
\end_layout

\begin_layout Plain Layout

    init_vector y(1,n);                   // vector of responses
\end_layout

\begin_layout Plain Layout

    init_int kfixed;                      // number of columns in design
 matrix(DM) for fixed effects
\end_layout

\begin_layout Plain Layout

    init_matrix fixedDM(1,n,1,kfixed);    // fixed effect DM
\end_layout

\begin_layout Plain Layout

    init_int nre;                         // number of random effects
\end_layout

\begin_layout Plain Layout

    int phase;                            // if no random effects set phase
 to -1 otherwise 2            
\end_layout

\begin_layout Plain Layout

	!! phase=2;
\end_layout

\begin_layout Plain Layout

	!! if(nre==0)phase=-1;
\end_layout

\begin_layout Plain Layout

    init_int krand;                       // number of columns in random
 effect DM
\end_layout

\begin_layout Plain Layout

    init_matrix randDM(1,n,1,krand);      // random effect DM
\end_layout

\begin_layout Plain Layout

    init_imatrix randIndex(1,n,1,krand);  // random effect indices for DM
\end_layout

\begin_layout Plain Layout

        
\end_layout

\begin_layout Plain Layout

PARAMETER_SECTION
\end_layout

\begin_layout Plain Layout

    init_vector Beta(1,kfixed,1);         // parameter vector for fixed
 effects
\end_layout

\begin_layout Plain Layout

    init_vector Tau(1,krand,phase);       // parameter vector for log(sigma)
\end_layout

\begin_layout Plain Layout

    objective_function_value g;           // objective function - negative
 log-likelihood
\end_layout

\begin_layout Plain Layout

    random_effects_vector u(1,nre,phase); // random effects vector
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

PROCEDURE_SECTION
\end_layout

\begin_layout Plain Layout

    int i;                                                // index variable
\end_layout

\begin_layout Plain Layout

    g=0;                                                  // initialize
 negative log-likelihood
\end_layout

\begin_layout Plain Layout

	cout<<"nre = "<< nre <<endl;
\end_layout

\begin_layout Plain Layout

	cout<<"kfixed = "<< kfixed <<endl;
\end_layout

\begin_layout Plain Layout

	cout<<"krand = "<< krand <<endl;
\end_layout

\begin_layout Plain Layout

    for (i=1;i<=nre;i++)                                  // if any random
 effects compute likelihood contribution for each
\end_layout

\begin_layout Plain Layout

        n01_prior(u(i));                                  // u's are N(0,1)
 distributed
\end_layout

\begin_layout Plain Layout

	cout<<"g = "<< g <<endl;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    for(i=1;i<=n;i++)                                     // loop over rows
 in data
\end_layout

\begin_layout Plain Layout

          ll_i(i,Beta,Tau,u(randIndex(i)));               //compute negative
 log-likelihood for each row with separable function
\end_layout

\begin_layout Plain Layout

	cout<<"g = "<< g <<endl;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

SEPARABLE_FUNCTION void n01_prior(const prevariable&  u)  // taken from
 glmmadmb.tpl; uses PI 
\end_layout

\begin_layout Plain Layout

 g -= -0.5*log(2.0*PI) - 0.5*square(u);
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

SEPARABLE_FUNCTION void ll_i(const int i, const dvar_vector& Beta,const
 dvar_vector& Tau,const dvar_vector& u)
\end_layout

\begin_layout Plain Layout

    int j;
\end_layout

\begin_layout Plain Layout

    dvariable mu;                                         // link value
\end_layout

\begin_layout Plain Layout

    mu=fixedDM(i)*Beta;                                   // fixed portion
 
\end_layout

\begin_layout Plain Layout

    for(j=1;j<=krand;j++)                                 // random portion
 (if any)
\end_layout

\begin_layout Plain Layout

        mu+=randDM(i,j)*u(j)*mfexp(Tau(j));
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

    g-= y(i)*mu - log(1+exp(mu));                         // Bernoulli likelihoo
d with logit link
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section*
\begin_inset Newpage newpage
\end_inset

Appendix - proc.form, mixed.model.admb, mixed.model.dat
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#' Mixed effect model formula parser
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' Parses a mixed effect model in the lme4 structure of  ~fixed +(re1|g1)
 +...+(ren|gn)
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' @param f formula for mixed effect mode in the form used in lme4; ~fixed
 +(re1|g1) +...+(ren|gn)
\end_layout

\begin_layout Plain Layout

#' @return A list with elements fix.model and re.model.
 fix.model contains the formula for the fixed effects;
\end_layout

\begin_layout Plain Layout

#' re.model contains elements sub, the grouping formula and model the design
 formula for the
\end_layout

\begin_layout Plain Layout

#' random effect.
 Each formula is of type character and must be wrapped with as.formula in
 use with model.matrix
\end_layout

\begin_layout Plain Layout

#' @author Devin Johnson <devin.johnson@@noaa.gov>
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

proc.form <- function(f){
\end_layout

\begin_layout Plain Layout

	tms <- terms(f)
\end_layout

\begin_layout Plain Layout

	tms.lab <- attr(tms, "term.labels")
\end_layout

\begin_layout Plain Layout

	tms.lst <- strsplit(tms.lab, rep(" | ",length(tms.lab)), fixed=TRUE)
\end_layout

\begin_layout Plain Layout

	fix.var <- attr(tms, "term.labels")[sapply(tms.lst, "length")==1]
\end_layout

\begin_layout Plain Layout

	if(length(fix.var)==0) 
\end_layout

\begin_layout Plain Layout

		fix.model="~1"
\end_layout

\begin_layout Plain Layout

	else
\end_layout

\begin_layout Plain Layout

		fix.model <- paste("~ ",paste(fix.var, collapse=" + "))
\end_layout

\begin_layout Plain Layout

	re.lst <- tms.lst[sapply(tms.lst, "length")==2]
\end_layout

\begin_layout Plain Layout

	if(length(re.lst)==0) re.model <- NULL
\end_layout

\begin_layout Plain Layout

	else{
\end_layout

\begin_layout Plain Layout

		re.model <- lapply(re.lst, function(x){list(model=paste("~",x[1]), sub=paste("~"
,x[2],"-1", collapse=""))})
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	return(list(fix.model=fix.model, re.model=re.model))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#' Mixed effect model construction
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' Functions that develop structures needed for a mixed effect model
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' mixed.model.admb - creates design matrices and supporting index matrices
\end_layout

\begin_layout Plain Layout

#' for use of mixed model in ADMB
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' mixed.model.dat - writes to data file (con) for fixed and random effect
 stuctures
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

#' @aliases mixed.model.admb mixed.model.dat
\end_layout

\begin_layout Plain Layout

#' @usage mixed.model.admb(formula,data)
\end_layout

\begin_layout Plain Layout

#'        mixed.model.dat(x,con)
\end_layout

\begin_layout Plain Layout

#' @param formula formula for mixed effect mode in the form used in lme4;
 ~fixed +(re1|g1) +...+(ren|gn)
\end_layout

\begin_layout Plain Layout

#' @param data dataframe used to construct the design matrices from the
 formula
\end_layout

\begin_layout Plain Layout

#' @param x list structure created by mixed.model.admb
\end_layout

\begin_layout Plain Layout

#' @param con connection to data file which contents will be appended
\end_layout

\begin_layout Plain Layout

#' @return mixed.model.admb returns a list with elements fixed.dm, the design
 matrix for
\end_layout

\begin_layout Plain Layout

#' the fixed effects; re.dm, a combined design matrix for all of the random
 effects; and 
\end_layout

\begin_layout Plain Layout

#' re.indices, matrix of indices into a single vector of random effects to
 be applied to the 
\end_layout

\begin_layout Plain Layout

#' design matrix location.
\end_layout

\begin_layout Plain Layout

#' @author Jeff Laake 
\end_layout

\begin_layout Plain Layout

#' 
\end_layout

\begin_layout Plain Layout

mixed.model.admb=function(formula,data)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

# parse formula for fixed and random effects
\end_layout

\begin_layout Plain Layout

  mlist=proc.form(formula)
\end_layout

\begin_layout Plain Layout

# construct design matrix for fixed effects
\end_layout

\begin_layout Plain Layout

  fixed.dm=model.matrix(as.formula(mlist$fix.model),data)
\end_layout

\begin_layout Plain Layout

# remainder of code is for random effects unless NULL
\end_layout

\begin_layout Plain Layout

  reindex=0
\end_layout

\begin_layout Plain Layout

  re.dm=NULL
\end_layout

\begin_layout Plain Layout

  re.indices=NULL
\end_layout

\begin_layout Plain Layout

  if(!is.null(mlist$re.model))
\end_layout

\begin_layout Plain Layout

  {
\end_layout

\begin_layout Plain Layout

#    Loop over each random effect component
\end_layout

\begin_layout Plain Layout

     for(i in 1:length(mlist$re.model))
\end_layout

\begin_layout Plain Layout

	 {
\end_layout

\begin_layout Plain Layout

#      Make sure each variable used to define random effect group is a factor
 variable
\end_layout

\begin_layout Plain Layout

  	   if(!all(sapply(model.frame(as.formula(mlist$re.model[[i]]$sub),data),is.factor
)))
\end_layout

\begin_layout Plain Layout

	       stop(paste("
\backslash
n one or more variables in",mlist$re.model[[i]]$sub,"is not a factor variable
\backslash
n"))
\end_layout

\begin_layout Plain Layout

       else
\end_layout

\begin_layout Plain Layout

	   {
\end_layout

\begin_layout Plain Layout

#         Compute design matrix for grouping variables
\end_layout

\begin_layout Plain Layout

          zz=model.matrix(as.formula(mlist$re.model[[i]]$sub),data)
\end_layout

\begin_layout Plain Layout

#         Not all combinations of factor variable(s) may be used so only
 use those observed in the data
\end_layout

\begin_layout Plain Layout

		  used.columns=which(colSums(zz)>0)
\end_layout

\begin_layout Plain Layout

		  nre=length(used.columns)
\end_layout

\begin_layout Plain Layout

#         Compute the indices for this particular grouping structure and
 reindex if any missing
\end_layout

\begin_layout Plain Layout

          indices=rowSums(zz*col(zz))
\end_layout

\begin_layout Plain Layout

		  if(nre!=ncol(zz))indices=match(indices,used.columns)
\end_layout

\begin_layout Plain Layout

#         Compute the design matrix for the random effect formula
\end_layout

\begin_layout Plain Layout

          zz=model.matrix(as.formula(mlist$re.model[[i]]$model),data)
\end_layout

\begin_layout Plain Layout

#         Now shift indices to refer to a single vector of random effects
 across all re groupings
\end_layout

\begin_layout Plain Layout

		  ng=max(indices)
\end_layout

\begin_layout Plain Layout

          indices=matrix(indices,nrow=length(indices),ncol=ncol(zz))+reindex
\end_layout

\begin_layout Plain Layout

          indices=t(t(indices)+cumsum(c(0,rep(ng,ncol(zz)-1))))
\end_layout

\begin_layout Plain Layout

          reindex=max(indices)	
\end_layout

\begin_layout Plain Layout

#         Bind random effect design matrices (re.dm), indices into random
 effects vector (re.indices) and
\end_layout

\begin_layout Plain Layout

#         index for the random effect sigma parameter (re.sigma)
\end_layout

\begin_layout Plain Layout

		  re.dm=cbind(re.dm,zz)
\end_layout

\begin_layout Plain Layout

		  re.indices=cbind(re.indices,indices)
\end_layout

\begin_layout Plain Layout

	   }
\end_layout

\begin_layout Plain Layout

	 }
\end_layout

\begin_layout Plain Layout

   }
\end_layout

\begin_layout Plain Layout

   return(list(fixed.dm=fixed.dm,re.dm=re.dm,re.indices=re.indices))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

mixed.model.dat=function(x,con)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	# number of columns of fixed dm
\end_layout

\begin_layout Plain Layout

	write(ncol(x$fixed.dm),con,append=TRUE)
\end_layout

\begin_layout Plain Layout

	# fixed dm
\end_layout

\begin_layout Plain Layout

	write(t(x$fixed.dm),con,ncolumns=ncol(x$fixed.dm),append=TRUE)
\end_layout

\begin_layout Plain Layout

    if(!is.null(x$re.dm))
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		# number of random effects
\end_layout

\begin_layout Plain Layout

		write(max(x$re.indices),con,append=TRUE)
\end_layout

\begin_layout Plain Layout

		# number of columns of re dm
\end_layout

\begin_layout Plain Layout

		write(ncol(x$re.dm),con,append=TRUE)
\end_layout

\begin_layout Plain Layout

		# re dm
\end_layout

\begin_layout Plain Layout

		write(t(x$re.dm),con,ncolumns=ncol(x$re.dm),append=TRUE)
\end_layout

\begin_layout Plain Layout

		# re indices
\end_layout

\begin_layout Plain Layout

		write(t(x$re.indices),con,ncolumns=ncol(x$re.indices),append=TRUE)
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	else
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		# number of re =0
\end_layout

\begin_layout Plain Layout

		write(0,con,append=TRUE)
\end_layout

\begin_layout Plain Layout

		# number of columns of re dm=0
\end_layout

\begin_layout Plain Layout

		write(0,con,append=TRUE)
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

    invisible()	
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{landscape}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
